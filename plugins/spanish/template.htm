<!DOCTYPE html>
    <meta charset=utf-8 >


{%

{{ '<title>{0} - Dookumentation</title>'.format(data['basename'][:99]) }}

if not livereload:
    {{ '<meta http-equiv=refresh content=240 ><!-- LiveReload not installed -->' }}

%}


    <meta name=viewport content="width=device-width, initial-scale=1.0">
    <meta name=generator content=Dookumentation >
    <meta name=description content="Documentacion HTML generada por Dookumentation">
    <meta name=keywords content="Documentacion,Python,HTML,Manual,Ayuda,Readme">
    <link rel="shortcut icon" href="https://www.python.org/static/favicon.ico"/>
    <link rel=stylesheet href="https://storage.googleapis.com/code.getmdl.io/1.0.5/material.light_green-light_blue.min.css">
    <script src="https://storage.googleapis.com/code.getmdl.io/1.0.5/material.min.js"></script>
    <link rel=stylesheet href="https://fonts.googleapis.com/icon?family=Material+Icons">

    <style>
        body, details {
            background-blend-mode:    screen;
            background:
                                      linear-gradient(        lightcyan, transparent),
                                      linear-gradient(90deg , skyblue  , transparent),
                                      linear-gradient(-90deg, lightblue, transparent);

            height:                   100%;

            width:                    100%;
        }

        section {
            display:                  flex;

            flex-wrap:                wrap;

            justify-content:          space-around;
        }

        details, dialog {
            flex:                     1;
            flex-grow:                1;

            background:               #fff;
            border:                   1px gray solid;
            border-radius:            9px;

            margin:                   9px;
            max-width:                800px;
            min-width:                400px;

            opacity:                  0.5;

            padding:                  9px;

            white-space:              pre-wrap;
            word-break:               break-word;
            word-wrap:                break-word;
        }

        details[open], dialog[open] {
            height:                   inherit;

            opacity:                  1;
        }

        h1 {
            opacity:                  0.5;
        }

        input[type=color] {
            border-radius:            9px;
        }

        .overlay {
            background-color:         white;
            border:                   1px solid gray;
            border-radius:            9px;

            display:                  none;

            height:                   85%;

            left:                     25%;

            overflow:                 auto;

            padding:                  9px;
            position:                 fixed;

            top:                      9%;

            width:                    875px;

            z-index:                  1002;
        }

        .check0, .check1, .check2, .check3, .check4, .check5 { display: none }

        .check0:checked ~ .expandicon0, .check1:checked ~ .expandicon1,
        .check2:checked ~ .expandicon2, .check3:checked ~ .expandicon3,
        .check4:checked ~ .expandicon4, .check5:checked ~ .expandicon5 {
            -webkit-transform:        scale(1) translateY(9px);

            transform:                scale(1) translateY(9px);
        }

        .expandicon0, .expandicon1, .expandicon2,
        .expandicon3, .expandicon4, .expandicon5 {
            -webkit-transform-origin: 50% 0;
            -webkit-transform:        scale(0) translateY(-9px);
            -webkit-transition:       .75s;

            transform:                scale(0) translateY(-9px);
            transform-origin:         50% 0;
            transition:               .75s;
        }

        #source_code {
            background-image:
                                     -webkit-linear-gradient(left, white 10px, transparent 10px),
                                     -webkit-linear-gradient(right, white 10px, transparent 10px),
                                     -webkit-linear-gradient(white 30px, lightgray 30px, lightgray 31px, white 31px);
            background-image:
                                     -moz-linear-gradient(left, white 10px, transparent 10px),
                                     -moz-linear-gradient(right, white 10px, transparent 10px),
                                     -moz-linear-gradient(white 30px, lightgray 30px, lightgray 31px, white 31px);
            background-image:
                                     linear-gradient(left, white 10px, transparent 10px),
                                     linear-gradient(right, white 10px, transparent 10px),
                                     linear-gradient(white 30px, lightgray 30px, lightgray 31px, white 31px);
            background-size:         100% 100%, 100% 100%, 100% 31px;
            border:                  1px solid #000;
            border-radius:           9px;
            box-shadow:              inset -14em 0 99px 0 rgba(99, 99, 99, 0.25);

            color:                   #000;

            font-family:             monospace !important;

            height:                  480px;

            line-height:             31px;

            margin-left:             55px;

            resize:                  none;    /* vertical; */

            width:                   800px;
        }

        #source_code::selection {
            background:              #aaa;

            color:                   #002B36;
        }

        .source_code_lines {
            background-blend-mode:   screen;
            background:
                                     linear-gradient(gray, transparent),
                                     linear-gradient(90deg, rgb(64, 196, 255), transparent),
                                     linear-gradient(-90deg, rgb(99, 99, 99), transparent);
            border:                  1px solid #666;
            border-right:            none;

            color:                   #002B36;

            display:                 block;

            line-height:             31px;

            margin:                  0;
        }

        .source_code_lines a {
            border-radius:           5px;

            color:                   #002B36;

            line-height:             31px;

            padding-left:            .5em;

            text-decoration:         none;
        }

        .source_code_lines a:hover {
            -webkit-box-shadow:      9px 0 50px 9px white;
            -moz-box-shadow:         9px 0 50px 9px white;

            background-color:        white;
            box-shadow:              9px 0 50px 9px white;
        }

        @media screen and (max-width:1000px) {
            #footer, h1 {
                display:             none;
            }

        }
    </style>


    <div class="mdl-layout mdl-js-layout mdl-layout--fixed-header">
        <header class="mdl-layout__header">
            <div class="mdl-layout__header-row">
                <span class="mdl-layout-title">
                    <h1 title="The Dark Side of Documentation">&equiv; Dookumentation !</h1>
                </span>
                <div class="mdl-layout-spacer">
                    <center>
                        <form action="#">
                            <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                                <input class="mdl-textfield__input" type=search list=lista id="sample3" />
                                <datalist id=lista>
                                    {%
                                    for _ in data.values():
                                        if isinstance(_, str) and not _.isdigit() and len(_) > 3 and len(_) < 80:
                                            {{ '<option value="{0}"> '.format(_.lower()) }}
                                    %}
                                </datalist>
                                <div class="mdl-tooltip mdl-tooltip--large" for="sample3">Buscar</div>
                                <label class="mdl-textfield__label" for="sample3">Buscar...</label>
                            </div>
                        </form>
                    </center>
                </div>
                <nav class="mdl-navigation">
                    <a class="mdl-navigation__link" alt="Go back to Index" href="" id=navindex >Indice</a>
                    <div class="mdl-tooltip mdl-tooltip--large" for=navindex >Volver al Indice</div>
                    <a class="mdl-navigation__link" alt="Go back to Modules" href="" id=navmodules >Modulos</a>
                    <div class="mdl-tooltip mdl-tooltip--large" for=navmodules >Volver a Modulos</div>
                </nav>
            </div>
        </header>
        <br>
        <div class=overlay id=overlay_container >
            <a href="javascript:void(0)" id=btoverl onclick="document.getElementById('overlay_container').style.display='none'" style="position:absolute;right:1em">
                <button class="mdl-button mdl-js-button mdl-button--raised mdl-button--accent mdl-button mdl-js-ripple-effect" style="z-index:1000">
                    <b>&cross;</b>
                </button>
            </a>
            <div class="mdl-tooltip mdl-tooltip--large" for=btoverl>Cerrar</div>
            <div id=overlay >

{%


with open(data['fullpath'], 'r', encoding='utf-8') as _code:
    try:  # Use pygments if is installed.
        from pygments import highlight
        from pygments.lexers import PythonLexer
        from pygments.formatters import HtmlFormatter
        formater = HtmlFormatter(linenos=True, anchorlinenos=True, nobackground=True)
        {{ str(highlight(_code.read(), PythonLexer(), formater))  }}
        {{ '<style>{0}</style>'.format(formater.get_style_defs()) }}
    except ImportError:  # Dont Die if is not installed.
        {{ '<textarea name=editContent id=source_code readonly >{}</textarea><!-- Pygments not installed -->'.format(_code.read().strip()) }}
        {{ '<script>createTextAreaWithLines("source_code")</script>' }}
{{ '</div></div><section>' }}


###############################################################################
# Imports


if data.get('imports'):
    {{ '<details id=imports open title="Juntamos todos los Imports del codigo"> <summary> <b>&zhcy; Importaciones</b> </summary> <h4> &check; {0} Imports!.</h4> <ol> '.format(len(data['imports']['imports']) + len(data['imports']['from_imports'])) }}
    for _ in data['imports']['imports'].items() :
        if _[0].lower() in vuiltins:
            try:
                tit = __import__(str(_[0])).__doc__.strip()[:9999].replace('"', "'")
            except:
                tit = str(_[0]).capitalize()
            {{ '<li> <b>import <a title="{tit}" alt="{mod}" target=_blank href="javascript:void(0)" onclick=searchy("{mod}") >{mod}</a> {ass}</b> &raquo; <a title="{mod}" alt="{mod}" target=_blank href="javascript:void(0)" onclick="overly()">Linea {lin}</a> <br><br>'.format(
                mod=_[0],
                ass="as {}".format(_[1]['asname']) if _[1]['asname'] else "",
                lin=_[1]['lineno'],
                tit=tit) }}
        else:
            {{ '<li> <b>import {0} {1}</b> &raquo; <a  title="{0}" alt="{0}" target=_blank href="javascript:void(0)" onclick="overly()">Linea {2}</a> <br><br>'.format(_[0], "as {}".format(_[1]['asname']) if _[1]['asname'] else "", _[1]['lineno']) }}
    for _ in data['imports']['from_imports'].items():
        if _[0].lower() in vuiltins or _[1]['module'].lower() in vuiltins:
            try:
                tit = __import__(str(_[1]['module'])).__doc__.strip()[:9999].replace('"', "'")
            except:
                tit = str(_[1]['module']).capitalize()
            {{ '<li> <b>from <a title="{tit}" alt="{mod}" target=_blank href="javascript:void(0)" onclick=searchy("{mod}") >{mod}</a> import <a title="{sub}" alt="{sub}" target=_blank href="javascript:void(0)" onclick=searchy("{sub}") >{sub}</a> {ass}</b> &raquo; <a title="{mod}" alt="{mod}" target=_blank href="javascript:void(0)" onclick="overly()">Linea {lin}</a> <br><br>'.format(
                tit=tit,
                mod=_[1]['module'],
                sub=_[0],
                ass="as {}".format(_[1]['asname']) if _[1]['asname'] else "",
                lin=_[1]['lineno']) }}
        else:
            {{ '<li> <b>from {0} import {1} {2}</b> &raquo; <a title="{3}" alt="{3}" target=_blank href="javascript:void(0)" onclick="overly()">Linea {3}</a> <br><br>'.format(_[1]['module'], _[0], "as {}".format(_[1]['asname']) if _[1]['asname'] else "", _[1]['lineno'] ) }}
    {{ '</ol> <i> <a title="Recomendamos usar iSort" alt="Recomendamos usar iSort" target=_blank href="https://github.com/timothycrosley/isort">Recomendamos usar iSort</a> </i> <br> </details> ' }}


###############################################################################
# Functions


if data.get('functions'):
    {{ '<details id=functions open title="Juntamos todas las Funciones del codigo"> <summary> <b>&boxbox; Funciones</b> </summary> <h4> &check; {0} Funciones!.</h4>  <ol> '.format(len(data.get('functions'))) }}
    for _ in data['functions'].items():
        decoradore = '<br>'.join(_[1]['decorators']) + '<br>' if _[1]['decorators'] != [] else ''
        attrivutes = ''
        if len(_[1]['attrs']):
            for atri in _[1]['attrs'].items():
                attrivutes += '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{0} &raquo; <a title="{0}" alt="{0}" target=_blank href="javascript:void(0)" onclick="overly()">Linea {1}</a> <br>'.format(atri[0], atri[1])
        else:
            attrivutes = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &bull; &bull; &bull;'
        {{ '<li>{deco} def <b>{name}:</b> &raquo; <a title="{name}" alt="{name}" target=_blank href="javascript:void(0)" onclick="overly()">Linea {lin}</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<textarea readonly title=DocString style="width:350px">{docz}</textarea><br>{atri}'.format(name=_[0], deco=decoradore, docz=_[1]['docstring'], lin=_[1]['lineno'], atri=attrivutes) }}
    {{ ' </details> ' }}


###############################################################################
# Classes


if data.get('classes'):
    {{ '<details id=classes open title="Juntamos todas las Clases del codigo"> <summary> <b>&boxbox; Clases</b> </summary> <h4> &check; {0} Clases!.</h4>  <ol> '.format(len(data.get('classes'))) }}
    for _ in data['classes'].items():
        decoradore = '<br>'.join(_[1]['decorators']) + '<br>' if _[1]['decorators'] != [] else ''
        attrivutes = ''
        if len(_[1]['attributes']):
            for atri in _[1]['attributes'].items():
                attrivutes += '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{0} &raquo; <a title="{0}" alt="{0}" target=_blank href="javascript:void(0)" onclick="overly()">Linea {1}</a> <br>'.format(atri[0], atri[1])
        else:
            attrivutes = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &bull; &bull; &bull;'
        {{ '<li>{deco} class <b>{name}:</b> &raquo; <a title="{name}" alt="{name}" target=_blank href="javascript:void(0)" onclick="overly()">Linea {lin}</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<textarea readonly title=DocString style="width:350px">{docz}</textarea><br>{atri}<br>'.format(name=_[0], deco=decoradore, docz=_[1]['docstring'], lin=_[1]['lineno'], atri=attrivutes) }}
        if len(_[1]['functions']):
            for _ in _[1]['functions'].items():
                decoradore = '<br>'.join(['&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' + d for d in _[1]['decorators']]) + '<br>' if _[1]['decorators'] != [] else ''
                attrivutes = ''
                if len(_[1]['attrs']):
                    for atri in _[1]['attrs'].items():
                        attrivutes += '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{0} &raquo; <a title="{0}" alt="{0}" target=_blank href="javascript:void(0)" onclick="overly()">Linea {1}</a> <br>'.format(atri[0], atri[1])
                else:
                    attrivutes = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &bull; &bull; &bull;'
                {{ '<p>{deco}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def <b>{name}:</b> &raquo; <a title="{name}" alt="{name}" target=_blank href="javascript:void(0)" onclick="overly()">Linea {lin}</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<textarea readonly title=DocString style="width:300px">{docz}</textarea><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{atri}'.format(name=_[0], deco=decoradore, docz=_[1]['docstring'], lin=_[1]['lineno'], atri=attrivutes) }}
        {{ ' <hr> ' }}
    {{ ' <br> </details> ' }}


###############################################################################
# Attributes


if data.get('attributes'):
    {{ '<details id=attributes open title="Juntamos todos los Atributos del codigo"> <summary> <b>&Diamond; Atributos</b> </summary> <h4> &check; {0} Atributos!.</h4> <ol> '.format(len(data.get('attributes'))) }}
    for _ in sorted(data['attributes'].items()):
        {{ '<li><input type=text value="{1}" readonly /> &raquo; <a  title="{1}" alt="{1}" target=_blank href="javascript:void(0)" onclick="overly()">Linea {0}</a>'.format(_[1], _[0]) }}
        if _[0].lower() in vuiltins:
            {{ '&nbsp; <a title="Buscar informacion de este Atributo" alt="Buscar informacion de este Atributo" target=_blank href="javascript:void(0)" onclick=searchy("{0}") ><i class="material-icons">search</i></a>'.format(str(_[0]).lower().strip()) }}
        {{ '<br>' }}
    {{ ' </details> ' }}


###############################################################################
# Bugs


if data.get('pylama'):
    {{ '<details id=bugs open title="Pasamos el Lint de PyLama en todo el codigo"> <summary> <b>&hercon; Bichos</b> </summary>' }}
    if data.get('lines_per_bug'):
        {{ '<h4> &star; Escribiste 1 Bug cada {0} Lineas de Codigo!.</h4> <ol> '.format(data['lines_per_bug']) }}
    for _ in data['pylama']:
        {{ '<li><b><a  title="{3}" alt="{3}" target=_blank href="javascript:void(0)" onclick="overly()">Linea {0}</a> Columna {1} encontrado por {2}</b> &raquo; <i> {3} </i> <a title="Buscar informacion de este Bug" alt="Buscar informacion de este Bug" target=_blank href="javascript:void(0)" onclick=searchy("{4}") ><i class="material-icons">search</i></a>'.format(_['lnum'], _['col'], _['linter'].upper(), _['text'], parse.quote_plus(_['text'], encoding='utf-8')) }}
    {{ '<br><br><i><a title="Recomendamos usar PyLama" alt="Recomendamos usar PyLama" target=_blank href="https://github.com/klen/pylama#-pylama">Recomendamos usar PyLama</a></i><br></details>' }}


###############################################################################
# TO-DO List


if data.get('todo'):
    {{ '<details id=todo open title="Juntamos todos los comentarios en el codigo que coincidan con TODO, FIXME, OPTIMIZE o BUG"><summary><b>&check; Cosas para hacer</b></summary> <h4> &star; Tenes {0} Cosas para hacer!.</h4><ol>'.format(len(data['todo'])) }}
    for _ in data['todo']:
        {{ ' <li> <b>{0} on <a title="{2}" alt="{0}" target=_blank href="javascript:void(0)" onclick="overly()">Linea {1}</a></b> &raquo; <i> {2} </i> '.format(_['type'].upper(), _['lnum'], _['text'][:99]) }}
    {{ '</ol><br><br><i>Juntamos todos los comentarios en el codigo que coincidan con la Expresion Regular: r"(# TODO|# FIXME|# OPTIMIZE|# BUG)"</i></details>' }}


%}


        <details id=statistics open title="Generamos Stadisticas del codigo, ideal para mostrar el trabajo de los Desarrolladores">
            <summary>
                <b>&ccupssm; Stadisticas</b>
            </summary>
            <center>
                <table class="mdl-data-table mdl-data-table--selectable">
                    <th>Lineas Total<th>Lineas de Codigo<th>Peso (KiloBytes)<th>Caracteres</th><tr><td>
                        {%{{'{}<td>{}<td>{}<td>{}<tr>'.format(data['lines_total'], data['lines_code'], data['kilobytes'], data['characters'])}}%}

                    <th>Words<th>Puntuaciones<th>Permisos<th>Bugs ?</th><tr><td>
                        {%{{'{}<td>{}<td>{}<td>{}<tr>'.format(data['words'], data['punctuations'], data['permissions'], bool(len(data['pylama'])))}}%}

                    <th>Enlace Simbolico ?<th>Escribible ?<th>Ejecutable ?<th>Legible ?</th><tr><td>
                        {%{{'{}<td>{}<td>{}<td>{}<tr>'.format(data['symlink'],data['writable'], data['executable'],data['readable']) }}%}

                    <th>Tiene Print()?<th>Tiene __import__()?<th>Tiene BreakPoints?<th>SheBang ?</th><tr><td>
                        {%{{'{}<td>{}<td>{}<td>{}<tr>'.format(data['has_print'], data['import_procedural'], data['has_set_trace'], data['has_shebang']) }}%}
                </table>
            </center>
            <p> <b>Suma de chequeo SHA-1 del archivo (UTF-8): </b> {%{{ data['sha1']     }}%}
            <p> <b>Fecha de la ultima Modificacion (Formato ISO): </b> {%{{ data['modified'] }}%}
            <p> <b>Fecha del ultimo Acceso (Formato ISO):      </b> {%{{ data['accessed'] }}%}
        </details>
    </section>
    <br>


    <footer id=footer class="mdl-mini-footer">
        <button id=btfscreen onclick="window.open(window.location.href, 'Dookumentation' , 'type=fullWindow, fullscreen, scrollbars=auto')" class="mdl-button mdl-js-button mdl-button--raised mdl-button--accent mdl-button mdl-js-ripple-effect">PantallaCompleta</button>
        <div class="mdl-tooltip mdl-tooltip--large" for=btfscreen>Abrir en Pantalla Completa</div>
        &nbsp;
        <a href="javascript:window.print()">
            <button id=btprint class="mdl-button mdl-js-button mdl-button--raised mdl-button--accent mdl-button mdl-js-ripple-effect">Imprimir</button>
        </a>
        <div class="mdl-tooltip mdl-tooltip--large" for=btprint>Imprimir en la Impresora</div>
        &nbsp;
        <a href="javascript:window.history.back()">
            <button id=btgoback class="mdl-button mdl-js-button mdl-button--raised mdl-button--accent mdl-button mdl-js-ripple-effect">Atras</button>
        </a>
        <div class="mdl-tooltip mdl-tooltip--large" for=btgoback>Volver Atras</div>
        &nbsp;
        <a href="javascript:window.location.reload()">
            <button id=btreload class="mdl-button mdl-js-button mdl-button--raised mdl-button--accent mdl-button mdl-js-ripple-effect">Recargar</button>
        </a>
        <div class="mdl-tooltip mdl-tooltip--large" for=btreload>Recargar Pagina</div>
        &nbsp;
        <a href="javascript:window.history.forward()">
            <button id=btforward class="mdl-button mdl-js-button mdl-button--raised mdl-button--accent mdl-button mdl-js-ripple-effect">Adelante</button>
        </a>
        <div class="mdl-tooltip mdl-tooltip--large" for=btforward>Ir Adelante</div>
        &nbsp;
        <a href="javascript:window.open('view-source:' + window.location.href, '_blank')">
            <button id=btsource class="mdl-button mdl-js-button mdl-button--raised mdl-button--accent mdl-button mdl-js-ripple-effect">Fuentes</button>
        </a>
        <div class="mdl-tooltip mdl-tooltip--large" for=btsource>Ver Codigo Fuente de la Pagina</div>
        &nbsp;
        <br>
        &nbsp;
        <br>
        <div class="mdl-mini-footer__left-section">
            <b class="mdl-logo" title="Creado usando Dookumentation">Dookumentation</b>
            <ul class="mdl-mini-footer__link-list">
                <li>Hecho con <big style="color:red">&hearts;</big> y
                    <a href="https://www.python.org" title=Python>Python</a> por
                    <a href="{%{{__url__}}%}" title=JuanCarlos>Juan</a>!.

                <li><center>
                        <input type=checkbox class=check0 id=bugreport unchecked />
                        <label for=bugreport class="icon material-icons" title="Reportar Bugs">bug_report</label>
                        <div class=expandicon0 > Probado en
                            <a href="https://www.chromium.org/Home" title=Chromium >Chromium</a>,
                            <a href="https://www.google.com/chrome" title=Chrome >Chrome</a>,
                            <a href="https://www.google.com/chrome/browser/mobile" title=Android >Android</a>,
                            <a href="https://www.mozilla.org/en-US/firefox" title=Firefox >Firefox</a> &
                            <a href="http://www.qupzilla.com/download" title=Qupzilla >Qupzilla</a>.<br>
                            <a href="{%{{__url__}}%}/issues" title=Bugs >Envia errores, ideas, bugs, mejoras, cerveza, pizza, etc.</a>
                        </div>
                    </center>

                <li><center>
                        <input type=checkbox class=check1 id=share unchecked />
                        <label for=share class="icon material-icons" title="Compartir Dookumentation con tus amigos y colegas de trabajo!">share</label>
                        <div class=expandicon1 >
                            {%{{" <a href='https://twitter.com/home?status=I%20Like%20{n}!:%20{u}' title='Compartir en Twitter' target=_blank alt='Compartir en Twitter'>Twitter</a> <a href='https://plus.google.com/share?url={u}' title='Compartir en GooglePlus' target=_blank alt='Compartir en Google Plus'>GooglePlus</a> <br> <a href='http://www.facebook.com/share.php?u={u}&t=I%20Like%20{n}' title='Compartir en Facebook' target=_blank alt='Compartir en Facebook'>Facebook</a> <a href='mailto:?body=I%20Like%20{n}!:%20{u}' title='Compartir via Mail' target=_blank alt='Compartir via email'>Mail</a> ".format(u=__url__, n="Dookumentation") }}%}
                        </div>
                    </center>

                <li><center>
                        <input type=checkbox class=check2 id=settinga unchecked />
                        <label for=settinga class="icon material-icons" title="Tocar configuraciones temporales (hasta el proximo Recargar de pagina)">settings_applications</label>
                        <div class=expandicon2 >
                             <input class="mdl-slider mdl-js-slider" type=range id=s1 min=400 max=1024 step=50 title="Ajuste Responsive" onchange="responsibe(this.value + 'px')" style="width:200px"/>
                            <br>
                            <input type=color id=c1 title="Ajuste Color" onchange="colorize(this.value)" >
                            <label for=o1>&nbsp;Links hacia&nbsp;</label>
                            <select id=o1 title="Referencias de Documentacion Linkeadas (donde buscar)">
                                <option value="https://docs.python.org/3/search.html?q=" selected > Official
                                <option value="https://stackoverflow.com/search?q=">                StackOverflow
                                <option value="https://devdocs.io/python/library/">                 DevDocs
                                <option value="https://www.google.com/?q=">                         Google
                                <option value="https://github.com/search?&q=">                      GitHub
                                <option value="https://pypi.python.org/pypi?%3Aaction=search&term=">PyPI
                                <option value="https://searx.me/search?q=">                         SearX
                                <option value="https://duckduckgo.com/?q=">                         DuckDuckGo
                            </select>
                        </div>
                    </center>

                <li><center>
                        <input type=checkbox class=check3 id=downloadz unchecked />
                        <label for=downloadz class="icon material-icons" title="Exportar y Descargas">cloud_download</label>
                        <div class=expandicon3 >
                            <a title="Exportar a JSON" target=_blank alt='Exportar a JSON' download='{%{{data["basename"]}}%}.json' href="data:application/json;charset=utf-8,{%{{parse.quote(str(data), encoding='utf-8')}}%}">JSON</a>
                            <br>
                            <a title="Exportar a MarkDown MD" target=_blank alt='Exportar a MarkDown MD' download='{%{{data["basename"]}}%}.md' href="data:text/plain;charset=utf-8,{%{{parse.quote(str(json_meta_to_templar(data, MD, False)), encoding='utf-8')}}%}">MarkDown</a>
                    </center>
        </div>
    </footer>


<script>
    function responsibe(ancho) {

        // Update current Max based on current Width.
        document.querySelector("#s1").max = (window.innerWidth                    ||
                                             document.documentElement.clientWidth ||
                                             document.body.clientWidth            ||
                                             window.screen.availWidth        ) - 25;

        // Update current Width of elements.
        if ( !!document.querySelector("#imports") ) {
            document.querySelector("#imports").style.minWidth    = ancho;
        };

        if ( !!document.querySelector("#classes") ) {
            document.querySelector("#classes").style.minWidth    = ancho;
        };

        if ( !!document.querySelector("#functions") ) {
            document.querySelector("#functions").style.minWidth  = ancho;
        };

        if ( !!document.querySelector("#attributes") ) {
            document.querySelector("#attributes").style.minWidth = ancho;
        };

        if ( !!document.querySelector("#bugs") ) {
            document.querySelector("#bugs").style.minWidth       = ancho;
        };

        if ( !!document.querySelector("#todo") ) {
            document.querySelector("#todo").style.minWidth       = ancho;
        };

        if ( !!document.querySelector("#statistics") ) {
            document.querySelector("#statistics").style.minWidth = ancho;
        };

        // Force scroll to bottom (sometimes it didnt work?)
        window.scrollTo(0, document.body.scrollHeight            ||
                           document.documentElement.scrollHeight ||
                           window.innerHeight                    ||
                           document.documentElement.clientHeight ||
                           document.body.clientHeight            ||
                           window.screen.availHeight             );

    };

    function colorize(color) {

        // Update current Color of element.
        document.querySelector("body").style.background = color;

    };

    function searchy(thingy) {

        // Update current Color of element.
        var selection = document.querySelector("#o1");
        window.open(selection.options[selection.options.selectedIndex].value + thingy, '_blank');

    };

    function overly() {

        // Show or Hide the Overlay.
        var overly = document.getElementById('overlay_container');
        if ( overly.style.display == 'none' ) {
            overly.style.display = 'block';
        }
        else {
            overly.style.display = 'none';
        }
    };

    function createTextAreaWithLines(id) {

        // Create a textarea with Line Numbers, ~80 chars red margin, etc.
        var el = document.createElement('div');
        var ta = document.getElementById(id);
        ta.style.height = (ta.innerHTML.split("\n").length + 1) * 31 + "px";
        var string = '';
        for (var no=1 ; no < ta.innerHTML.split("\n").length + 1 ; no++) {
            if (string.length > 0) {
                string += "\n"
            };
            string += "<a href='#L" + no + "' title='Linea " + no + "' onclick='this.scrollIntoView()'><b>" + no + "</b></a><br>";
        };

        el.className          = 'source_code_lines';
        el.disabled           = 'disabled';
        el.style.height       = (ta.offsetHeight - 3) + "px";
        el.style.width        = "50px";
        el.style.position     = "absolute";
        el.style.overflow     = 'hidden';
        el.style.textAlign    = 'right';
        el.style.paddingRight = '0.1em';
        el.innerHTML          = string;
        el.style.zIndex       = 0;
        ta.style.zIndex       = 1;
        ta.style.position     = "relative";
        ta.parentNode.insertBefore(el, ta.nextSibling);
        setLine();
        ta.focus();

        ta.onkeydown   = function() { setLine() };
        ta.onmousedown = function() { setLine() };
        ta.onscroll    = function() { setLine() };
        ta.onblur      = function() { setLine() };
        ta.onfocus     = function() { setLine() };
        ta.onmouseover = function() { setLine() };
        ta.onmouseup   = function() { setLine() };

        function setLine() {
            el.scrollTop  =  ta.scrollTop;
            el.style.top  = (ta.offsetTop) + "px";
            el.style.left = (ta.offsetLeft - 55) + "px";
        };
    };

</script>


<!-- Dookumentation


    Templates can execute unrestricted Python 3,
    it should Render something cute from a simple plain text JSON 'data' object,
    the plain text JSON 'data' is simply the *.json file from /doc/json/ folder,
    this Template-Plugin Renders JSON data to MD (MarkDown, GitHub Compatible).

    I/O, Reading and Writing, Folders, SubFolders is handled by Dookumentation.

    The Encoding is UTF-8 and Unicode ready.

    The Programming Code is normal Python 3.

    The Template Mini-Markup code is Templar (Django / Jinja alike):
    https://gist.github.com/juancarlospaco/97a6a09d64b190a630ad#gistcomment-1576482

    For more info about Dookumentation:
    https://github.com/juancarlospaco/dookumentation#dookumentation


-->
